<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"><hibernate-configuration>  <!--表明以下的配置是针对session-factory配置的，SessionFactory是Hibernate中的一个类，这个类主要负责保存HIbernate的配置信息，以及对Session的操作-->  <session-factory>    <!--  选择HQL解析器的实现  -->    <property name="query.factory_class"> org.hibernate.hql.ast.ASTQueryTranslatorFactory</property>    <!-- 是否在后台显示Hibernate用到的SQL语句 -->    <property name="show_sql">true</property>    <!--  输出格式化后的sql,更方便查看  -->    <property name="format_sql">true</property>    <!--  在Hibernate系统参数中hibernate.use_outer_join被打开的情况下,该参数用来允许使用outer join来载入此集合的数据。  -->    <property name="use_outer_join">true </property>        <!--  设置外连接抓取树的最大深度  取值. 建议设置为0到3之间  -->    <property name="max_fetch_depth">1</property>    <!--  默认打开，启用cglib反射优化。cglib是用来在Hibernate中动态生成PO字节码的，打开优化可以加快字节码构造的速度  -->    <property name="cglib.use_reflection_optimizer">true </property>    <!--  允许查询缓存, 个别查询仍然需要被设置为可缓存的.  -->    <property name="cache.use_query_cache">false</property>    <property name="default_batch_fetch_size">16</property>    <!--jdbc.fetch_size是指Hibernate每次从数据库中取出并放到JDBC的Statement中的记录条数。Fetch Size设的越大，读数据库的次数越少，速度越快，Fetch Size越小，读数据库的次数越多，速度越慢-->    <property name="jdbc.fetch_size">50</property>    <!--jdbc.batch_size是指Hibernate批量插入,删除和更新时每次操作的记录数。Batch Size越大，批量操作的向数据库发送Sql的次数越少，速度就越快，同样耗用内存就越大-->    <property name="jdbc.batch_size">30</property>    <!--jdbc.use_scrollable_resultset是否允许Hibernate用JDBC的可滚动的结果集。对分页的结果集。对分页时的设置非常有帮助-->    <property name="jdbc.use_scrollable_resultset">false</property>    <!--connection.useUnicode连接数据库时是否使用Unicode编码-->    <property name="connection.useUnicode">true</property>    <!--connection.characterEncoding连接数据库时数据的传输字符集编码方式，最好设置为gbk，用gb2312有的字符不全-->    <property name="connection.characterEncoding">UTF-8</property>    <!--指定映射文件为“hibernate/ch1/UserInfo.hbm.xml”  <mapping resource="org/mxg/UserInfo.hbm.xml" />  -->  </session-factory></hibernate-configuration>